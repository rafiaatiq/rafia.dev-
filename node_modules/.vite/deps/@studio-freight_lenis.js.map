{
  "version": 3,
  "sources": ["../../@studio-freight/lenis/src/maths.js", "../../@studio-freight/lenis/src/animate.js", "../../@studio-freight/lenis/src/dimensions.js", "../../@studio-freight/lenis/src/debounce.js", "../../@studio-freight/lenis/src/emitter.js", "../../@studio-freight/lenis/src/virtual-scroll.js", "../../@studio-freight/lenis/src/index.js"],
  "sourcesContent": ["// Clamp a value between a minimum and maximum value\nexport function clamp(min, input, max) {\n  return Math.max(min, Math.min(input, max))\n}\n\n// Truncate a floating-point number to a specified number of decimal places\nexport function truncate(value, decimals = 0) {\n  return parseFloat(value.toFixed(decimals))\n}\n\n// Linearly interpolate between two values using an amount (0 <= t <= 1)\nexport function lerp(x, y, t) {\n  return (1 - t) * x + t * y\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nexport function damp(x, y, lambda, dt) {\n  return lerp(x, y, 1 - Math.exp(-lambda * dt))\n}\n\n// Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\n// https://anguscroll.com/just/just-modulo\nexport function modulo(n, d) {\n  return ((n % d) + d) % d\n}\n", "import { clamp, damp } from './maths'\n\n// Animate class to handle value animations with lerping or easing\nexport class Animate {\n  // Advance the animation by the given delta time\n  advance(deltaTime) {\n    if (!this.isRunning) return\n\n    let completed = false\n\n    if (this.lerp) {\n      this.value = damp(this.value, this.to, this.lerp * 60, deltaTime)\n      if (Math.round(this.value) === this.to) {\n        this.value = this.to\n        completed = true\n      }\n    } else {\n      this.currentTime += deltaTime\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\n\n      completed = linearProgress >= 1\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\n      this.value = this.from + (this.to - this.from) * easedProgress\n    }\n\n    // Call the onUpdate callback with the current value and completed status\n    this.onUpdate?.(this.value, completed)\n\n    if (completed) {\n      this.stop()\n    }\n  }\n\n  // Stop the animation\n  stop() {\n    this.isRunning = false\n  }\n\n  // Set up the animation from a starting value to an ending value\n  // with optional parameters for lerping, duration, easing, and onUpdate callback\n  fromTo(\n    from,\n    to,\n    { lerp = 0.1, duration = 1, easing = (t) => t, onStart, onUpdate }\n  ) {\n    this.from = this.value = from\n    this.to = to\n    this.lerp = lerp\n    this.duration = duration\n    this.easing = easing\n    this.currentTime = 0\n    this.isRunning = true\n\n    onStart?.()\n    this.onUpdate = onUpdate\n  }\n}\n", "import { debounce } from './debounce'\n\nexport class Dimensions {\n  constructor({ wrapper, content, autoResize = true } = {}) {\n    this.wrapper = wrapper\n    this.content = content\n\n    if (autoResize) {\n      const resize = debounce(this.resize, 250)\n\n      if (this.wrapper !== window) {\n        this.wrapperResizeObserver = new ResizeObserver(resize)\n        this.wrapperResizeObserver.observe(this.wrapper)\n      }\n\n      this.contentResizeObserver = new ResizeObserver(resize)\n      this.contentResizeObserver.observe(this.content)\n    }\n\n    this.resize()\n  }\n\n  destroy() {\n    this.wrapperResizeObserver?.disconnect()\n    this.contentResizeObserver?.disconnect()\n  }\n\n  resize = () => {\n    this.onWrapperResize()\n    this.onContentResize()\n  }\n\n  onWrapperResize = () => {\n    if (this.wrapper === window) {\n      this.width = window.innerWidth\n      this.height = window.innerHeight\n    } else {\n      this.width = this.wrapper.clientWidth\n      this.height = this.wrapper.clientHeight\n    }\n  }\n\n  onContentResize = () => {\n    this.scrollHeight = this.content.scrollHeight\n    this.scrollWidth = this.content.scrollWidth\n  }\n\n  get limit() {\n    return {\n      x: this.scrollWidth - this.width,\n      y: this.scrollHeight - this.height,\n    }\n  }\n}\n", "export function debounce(callback, delay) {\n  let timer\n  return function () {\n    let args = arguments\n    let context = this\n    clearTimeout(timer)\n    timer = setTimeout(function () {\n      callback.apply(context, args)\n    }, delay)\n  }\n}\n", "export class Emitter {\n  constructor() {\n    this.events = {}\n  }\n\n  emit(event, ...args) {\n    let callbacks = this.events[event] || []\n    for (let i = 0, length = callbacks.length; i < length; i++) {\n      callbacks[i](...args)\n    }\n  }\n\n  on(event, cb) {\n    // Add the callback to the event's callback list, or create a new list with the callback\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\n\n    // Return an unsubscribe function\n    return () => {\n      this.events[event] = this.events[event]?.filter((i) => cb !== i)\n    }\n  }\n\n  off(event, callback) {\n    this.events[event] = this.events[event]?.filter((i) => callback !== i)\n  }\n\n  destroy() {\n    this.events = {}\n  }\n}\n", "import { Emitter } from './emitter'\nimport { clamp } from './maths'\n\nexport class VirtualScroll {\n  constructor(\n    element,\n    { wheelMultiplier = 1, touchMultiplier = 2, normalizeWheel = false }\n  ) {\n    this.element = element\n    this.wheelMultiplier = wheelMultiplier\n    this.touchMultiplier = touchMultiplier\n    this.normalizeWheel = normalizeWheel\n\n    this.touchStart = {\n      x: null,\n      y: null,\n    }\n\n    this.emitter = new Emitter()\n\n    this.element.addEventListener('wheel', this.onWheel, { passive: false })\n    this.element.addEventListener('touchstart', this.onTouchStart, {\n      passive: false,\n    })\n    this.element.addEventListener('touchmove', this.onTouchMove, {\n      passive: false,\n    })\n    this.element.addEventListener('touchend', this.onTouchEnd, {\n      passive: false,\n    })\n  }\n\n  // Add an event listener for the given event and callback\n  on(event, callback) {\n    return this.emitter.on(event, callback)\n  }\n\n  // Remove all event listeners and clean up\n  destroy() {\n    this.emitter.destroy()\n\n    this.element.removeEventListener('wheel', this.onWheel, {\n      passive: false,\n    })\n    this.element.removeEventListener('touchstart', this.onTouchStart, {\n      passive: false,\n    })\n    this.element.removeEventListener('touchmove', this.onTouchMove, {\n      passive: false,\n    })\n    this.element.removeEventListener('touchend', this.onTouchEnd, {\n      passive: false,\n    })\n  }\n\n  // Event handler for 'touchstart' event\n  onTouchStart = (event) => {\n    const { clientX, clientY } = event.targetTouches\n      ? event.targetTouches[0]\n      : event\n\n    this.touchStart.x = clientX\n    this.touchStart.y = clientY\n\n    this.lastDelta = {\n      x: 0,\n      y: 0,\n    }\n\n    this.emitter.emit('scroll', {\n      deltaX: 0,\n      deltaY: 0,\n      event,\n    })\n  }\n\n  // Event handler for 'touchmove' event\n  onTouchMove = (event) => {\n    const { clientX, clientY } = event.targetTouches\n      ? event.targetTouches[0]\n      : event\n\n    const deltaX = -(clientX - this.touchStart.x) * this.touchMultiplier\n    const deltaY = -(clientY - this.touchStart.y) * this.touchMultiplier\n\n    this.touchStart.x = clientX\n    this.touchStart.y = clientY\n\n    this.lastDelta = {\n      x: deltaX,\n      y: deltaY,\n    }\n\n    this.emitter.emit('scroll', {\n      deltaX,\n      deltaY,\n      event,\n    })\n  }\n\n  onTouchEnd = (event) => {\n    this.emitter.emit('scroll', {\n      deltaX: this.lastDelta.x,\n      deltaY: this.lastDelta.y,\n      event,\n    })\n  }\n\n  // Event handler for 'wheel' event\n  onWheel = (event) => {\n    let { deltaX, deltaY } = event\n\n    if (this.normalizeWheel) {\n      deltaX = clamp(-100, deltaX, 100)\n      deltaY = clamp(-100, deltaY, 100)\n    }\n\n    deltaX *= this.wheelMultiplier\n    deltaY *= this.wheelMultiplier\n\n    this.emitter.emit('scroll', { deltaX, deltaY, event })\n  }\n}\n", "import { version } from '../package.json'\nimport { Animate } from './animate'\nimport { Dimensions } from './dimensions'\nimport { Emitter } from './emitter'\nimport { clamp, modulo } from './maths'\nimport { VirtualScroll } from './virtual-scroll'\n\n// Technical explanation\n// - listen to 'wheel' events\n// - prevent 'wheel' event to prevent scroll\n// - normalize wheel delta\n// - add delta to targetScroll\n// - animate scroll to targetScroll (smooth context)\n// - if animation is not running, listen to 'scroll' events (native context)\n\nexport default class Lenis {\n  // isScrolling = true when scroll is animating\n  // isStopped = true if user should not be able to scroll - enable/disable programmatically\n  // isSmooth = true if scroll should be animated\n  // isLocked = same as isStopped but enabled/disabled when scroll reaches target\n\n  /**\n   * @typedef {(t: number) => number} EasingFunction\n   * @typedef {'vertical' | 'horizontal'} Orientation\n   * @typedef {'vertical' | 'horizontal' | 'both'} GestureOrientation\n   *\n   * @typedef LenisOptions\n   * @property {Window | HTMLElement} [wrapper]\n   * @property {HTMLElement} [content]\n   * @property {Window | HTMLElement} [wheelEventsTarget] // deprecated\n   * @property {Window | HTMLElement} [eventsTarget]\n   * @property {boolean} [smoothWheel]\n   * @property {boolean} [syncTouch]\n   * @property {number} [syncTouchLerp]\n  //  * @property {number} [__iosNoInertiaSyncTouchLerp]\n   * @property {number} [touchInertiaMultiplier]\n   * @property {number} [duration]\n   * @property {EasingFunction} [easing]\n   * @property {number} [lerp]\n   * @property {boolean} [infinite]\n   * @property {Orientation} [orientation]\n   * @property {GestureOrientation} [gestureOrientation]\n   * @property {number} [touchMultiplier]\n   * @property {number} [wheelMultiplier]\n   * @property {boolean} [normalizeWheel] \n   * @property {boolean} [autoResize]\n   *\n   * @param {LenisOptions}\n   */\n  constructor({\n    wrapper = window,\n    content = document.documentElement,\n    wheelEventsTarget = wrapper, // deprecated\n    eventsTarget = wheelEventsTarget,\n    smoothWheel = true,\n    syncTouch = false,\n    syncTouchLerp = 0.075,\n    // __iosNoInertiaSyncTouchLerp = 0.4, // should be 1 but had to leave 0.4 for iOS (testing purpose)\n    touchInertiaMultiplier = 35,\n    duration, // in seconds\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\n    lerp = !duration && 0.1,\n    infinite = false,\n    orientation = 'vertical', // vertical, horizontal\n    gestureOrientation = 'vertical', // vertical, horizontal, both\n    touchMultiplier = 1,\n    wheelMultiplier = 1,\n    normalizeWheel = false, // deprecated\n    autoResize = true,\n  } = {}) {\n    window.lenisVersion = version\n\n    // if wrapper is html or body, fallback to window\n    if (wrapper === document.documentElement || wrapper === document.body) {\n      wrapper = window\n    }\n\n    this.options = {\n      wrapper,\n      content,\n      wheelEventsTarget,\n      eventsTarget,\n      smoothWheel,\n      syncTouch,\n      syncTouchLerp,\n      // __iosNoInertiaSyncTouchLerp,\n      touchInertiaMultiplier,\n      duration,\n      easing,\n      lerp,\n      infinite,\n      gestureOrientation,\n      orientation,\n      touchMultiplier,\n      wheelMultiplier,\n      normalizeWheel,\n      autoResize,\n    }\n\n    this.animate = new Animate()\n    this.emitter = new Emitter()\n    this.dimensions = new Dimensions({ wrapper, content, autoResize })\n    this.toggleClass('lenis', true)\n\n    this.velocity = 0\n    this.isLocked = false\n    this.isStopped = false\n    this.isSmooth = syncTouch || smoothWheel\n    this.isScrolling = false\n    this.targetScroll = this.animatedScroll = this.actualScroll\n\n    this.options.wrapper.addEventListener('scroll', this.onNativeScroll, {\n      passive: false,\n    })\n\n    this.virtualScroll = new VirtualScroll(eventsTarget, {\n      touchMultiplier,\n      wheelMultiplier,\n      normalizeWheel,\n    })\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\n  }\n\n  destroy() {\n    this.emitter.destroy()\n\n    this.options.wrapper.removeEventListener('scroll', this.onNativeScroll, {\n      passive: false,\n    })\n\n    this.virtualScroll.destroy()\n    this.dimensions.destroy()\n\n    this.toggleClass('lenis', false)\n    this.toggleClass('lenis-smooth', false)\n    this.toggleClass('lenis-scrolling', false)\n    this.toggleClass('lenis-stopped', false)\n    this.toggleClass('lenis-locked', false)\n  }\n\n  on(event, callback) {\n    return this.emitter.on(event, callback)\n  }\n\n  off(event, callback) {\n    return this.emitter.off(event, callback)\n  }\n\n  setScroll(scroll) {\n    // apply scroll value immediately\n    if (this.isHorizontal) {\n      this.rootElement.scrollLeft = scroll\n    } else {\n      this.rootElement.scrollTop = scroll\n    }\n  }\n\n  onVirtualScroll = ({ deltaX, deltaY, event }) => {\n    // keep zoom feature\n    if (event.ctrlKey) return\n\n    const isTouch = event.type.includes('touch')\n    const isWheel = event.type.includes('wheel')\n\n    const isTapToStop =\n      this.options.syncTouch && isTouch && event.type === 'touchstart'\n\n    if (isTapToStop) {\n      this.reset()\n      return\n    }\n\n    const isClick = deltaX === 0 && deltaY === 0 // click event\n\n    // const isPullToRefresh =\n    //   this.options.gestureOrientation === 'vertical' &&\n    //   this.scroll === 0 &&\n    //   !this.options.infinite &&\n    //   deltaY <= 5 // touch pull to refresh, not reliable yet\n\n    const isUnknownGesture =\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) ||\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0)\n\n    if (isClick || isUnknownGesture) {\n      // console.log('prevent')\n      return\n    }\n\n    // catch if scrolling on nested scroll elements\n    let composedPath = event.composedPath()\n    composedPath = composedPath.slice(0, composedPath.indexOf(this.rootElement)) // remove parents elements\n\n    if (\n      !!composedPath.find(\n        (node) =>\n          node.hasAttribute?.('data-lenis-prevent') ||\n          (isTouch && node.hasAttribute?.('data-lenis-prevent-touch')) ||\n          (isWheel && node.hasAttribute?.('data-lenis-prevent-wheel')) ||\n          node.classList?.contains('lenis') // nested lenis instance\n      )\n    )\n      return\n\n    if (this.isStopped || this.isLocked) {\n      event.preventDefault()\n      return\n    }\n\n    this.isSmooth =\n      (this.options.syncTouch && isTouch) ||\n      (this.options.smoothWheel && isWheel)\n\n    if (!this.isSmooth) {\n      this.isScrolling = false\n      this.animate.stop()\n      return\n    }\n\n    event.preventDefault()\n\n    let delta = deltaY\n    if (this.options.gestureOrientation === 'both') {\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\n    } else if (this.options.gestureOrientation === 'horizontal') {\n      delta = deltaX\n    }\n\n    const syncTouch = isTouch && this.options.syncTouch\n    const isTouchEnd = isTouch && event.type === 'touchend'\n\n    const hasTouchInertia = isTouchEnd && Math.abs(delta) > 5\n\n    if (hasTouchInertia) {\n      delta = this.velocity * this.options.touchInertiaMultiplier\n    }\n\n    this.scrollTo(this.targetScroll + delta, {\n      programmatic: false,\n      ...(syncTouch\n        ? {\n            lerp: hasTouchInertia ? this.options.syncTouchLerp : 1,\n          }\n        : {\n            lerp: this.options.lerp,\n            duration: this.options.duration,\n            easing: this.options.easing,\n          }),\n    })\n  }\n\n  resize() {\n    this.dimensions.resize()\n  }\n\n  emit() {\n    this.emitter.emit('scroll', this)\n  }\n\n  onNativeScroll = () => {\n    if (this.__preventNextScrollEvent) return\n\n    if (!this.isScrolling) {\n      const lastScroll = this.animatedScroll\n      this.animatedScroll = this.targetScroll = this.actualScroll\n      this.velocity = 0\n      this.direction = Math.sign(this.animatedScroll - lastScroll)\n      this.emit()\n    }\n  }\n\n  reset() {\n    this.isLocked = false\n    this.isScrolling = false\n    this.animatedScroll = this.targetScroll = this.actualScroll\n    this.velocity = 0\n    this.animate.stop()\n  }\n\n  start() {\n    this.isStopped = false\n\n    this.reset()\n  }\n\n  stop() {\n    this.isStopped = true\n    this.animate.stop()\n\n    this.reset()\n  }\n\n  raf(time) {\n    const deltaTime = time - (this.time || time)\n    this.time = time\n\n    this.animate.advance(deltaTime * 0.001)\n  }\n\n  scrollTo(\n    target,\n    {\n      offset = 0,\n      immediate = false,\n      lock = false,\n      duration = this.options.duration,\n      easing = this.options.easing,\n      lerp = !duration && this.options.lerp,\n      onComplete = null,\n      force = false, // scroll even if stopped\n      programmatic = true, // called from outside of the class\n    } = {}\n  ) {\n    if ((this.isStopped || this.isLocked) && !force) return\n\n    // keywords\n    if (['top', 'left', 'start'].includes(target)) {\n      target = 0\n    } else if (['bottom', 'right', 'end'].includes(target)) {\n      target = this.limit\n    } else {\n      let node\n\n      if (typeof target === 'string') {\n        // CSS selector\n        node = document.querySelector(target)\n      } else if (target?.nodeType) {\n        // Node element\n        node = target\n      }\n\n      if (node) {\n        if (this.options.wrapper !== window) {\n          // nested scroll offset correction\n          const wrapperRect = this.options.wrapper.getBoundingClientRect()\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\n        }\n\n        const rect = node.getBoundingClientRect()\n\n        target =\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\n      }\n    }\n\n    if (typeof target !== 'number') return\n\n    target += offset\n    target = Math.round(target)\n\n    if (this.options.infinite) {\n      if (programmatic) {\n        this.targetScroll = this.animatedScroll = this.scroll\n      }\n    } else {\n      target = clamp(0, target, this.limit)\n    }\n\n    if (immediate) {\n      this.animatedScroll = this.targetScroll = target\n      this.setScroll(this.scroll)\n      this.reset()\n      onComplete?.(this)\n      return\n    }\n\n    if (!programmatic) {\n      if (target === this.targetScroll) return\n\n      this.targetScroll = target\n    }\n\n    this.animate.fromTo(this.animatedScroll, target, {\n      duration,\n      easing,\n      lerp,\n      onStart: () => {\n        // started\n        if (lock) this.isLocked = true\n        this.isScrolling = true\n      },\n      onUpdate: (value, completed) => {\n        this.isScrolling = true\n\n        // updated\n        this.velocity = value - this.animatedScroll\n        this.direction = Math.sign(this.velocity)\n\n        this.animatedScroll = value\n        this.setScroll(this.scroll)\n\n        if (programmatic) {\n          // wheel during programmatic should stop it\n          this.targetScroll = value\n        }\n\n        if (!completed) this.emit()\n\n        if (completed) {\n          this.reset()\n          this.emit()\n          onComplete?.(this)\n\n          // avoid emitting event twice\n          this.__preventNextScrollEvent = true\n          requestAnimationFrame(() => {\n            delete this.__preventNextScrollEvent\n          })\n        }\n      },\n    })\n  }\n\n  get rootElement() {\n    return this.options.wrapper === window\n      ? document.documentElement\n      : this.options.wrapper\n  }\n\n  get limit() {\n    return this.dimensions.limit[this.isHorizontal ? 'x' : 'y']\n  }\n\n  get isHorizontal() {\n    return this.options.orientation === 'horizontal'\n  }\n\n  get actualScroll() {\n    // value browser takes into account\n    return this.isHorizontal\n      ? this.rootElement.scrollLeft\n      : this.rootElement.scrollTop\n  }\n\n  get scroll() {\n    return this.options.infinite\n      ? modulo(this.animatedScroll, this.limit)\n      : this.animatedScroll\n  }\n\n  get progress() {\n    // avoid progress to be NaN\n    return this.limit === 0 ? 1 : this.scroll / this.limit\n  }\n\n  get isSmooth() {\n    return this.__isSmooth\n  }\n\n  set isSmooth(value) {\n    if (this.__isSmooth !== value) {\n      this.__isSmooth = value\n      this.toggleClass('lenis-smooth', value)\n    }\n  }\n\n  get isScrolling() {\n    return this.__isScrolling\n  }\n\n  set isScrolling(value) {\n    if (this.__isScrolling !== value) {\n      this.__isScrolling = value\n      this.toggleClass('lenis-scrolling', value)\n    }\n  }\n\n  get isStopped() {\n    return this.__isStopped\n  }\n\n  set isStopped(value) {\n    if (this.__isStopped !== value) {\n      this.__isStopped = value\n      this.toggleClass('lenis-stopped', value)\n    }\n  }\n\n  get isLocked() {\n    return this.__isLocked\n  }\n\n  set isLocked(value) {\n    if (this.__isLocked !== value) {\n      this.__isLocked = value\n      this.toggleClass('lenis-locked', value)\n    }\n  }\n\n  get className() {\n    let className = 'lenis'\n    if (this.isStopped) className += ' lenis-stopped'\n    if (this.isLocked) className += ' lenis-locked'\n    if (this.isScrolling) className += ' lenis-scrolling'\n    if (this.isSmooth) className += ' lenis-smooth'\n    return className\n  }\n\n  toggleClass(name, value) {\n    this.rootElement.classList.toggle(name, value)\n    this.emitter.emit('className change', this)\n  }\n}\n"],
  "mappings": "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",
  "names": ["clamp", "min", "input", "max", "Math", "Animate", "deltaTime", "this", "isRunning", "completed", "lerp", "value", "x", "y", "to", "lambda", "dt", "t", "exp", "round", "currentTime", "linearProgress", "duration", "easedProgress", "easing", "from", "onUpdate", "stop", "onStart", "Dimensions", "constructor", "wrapper", "content", "autoResize", "resize", "onWrapperResize", "onContentResize", "window", "width", "innerWidth", "height", "innerHeight", "clientWidth", "clientHeight", "scrollHeight", "scrollWidth", "callback", "delay", "timer", "args", "arguments", "context", "clearTimeout", "setTimeout", "apply", "wrapperResizeObserver", "ResizeObserver", "observe", "contentResizeObserver", "destroy", "disconnect", "limit", "Emitter", "events", "event", "callbacks", "i", "length", "cb", "push", "_a", "filter", "VirtualScroll", "element", "wheelMultiplier", "touchMultiplier", "normalizeWheel", "onTouchStart", "clientX", "clientY", "targetTouches", "touchStart", "lastDelta", "emitter", "emit", "deltaX", "deltaY", "onTouchMove", "onTouchEnd", "onWheel", "addEventListener", "passive", "on", "removeEventListener", "Lenis", "document", "documentElement", "wheelEventsTarget", "eventsTarget", "smoothWheel", "syncTouch", "syncTouchLerp", "touchInertiaMultiplier", "pow", "infinite", "orientation", "gestureOrientation", "onVirtualScroll", "ctrlKey", "isTouch", "type", "includes", "isWheel", "options", "reset", "isClick", "isUnknownGesture", "composedPath", "slice", "indexOf", "rootElement", "find", "node", "hasAttribute", "classList", "contains", "isStopped", "isLocked", "preventDefault", "isSmooth", "isScrolling", "animate", "delta", "abs", "hasTouchInertia", "velocity", "scrollTo", "targetScroll", "programmatic", "onNativeScroll", "__preventNextScrollEvent", "lastScroll", "animatedScroll", "actualScroll", "direction", "sign", "lenisVersion", "body", "dimensions", "toggleClass", "virtualScroll", "off", "scroll", "isHorizontal", "scrollLeft", "scrollTop", "start", "time", "advance", "target", "offset", "immediate", "lock", "onComplete", "force", "querySelector", "nodeType", "wrapperRect", "getBoundingClientRect", "left", "top", "rect", "setScroll", "fromTo", "requestAnimationFrame", "n", "d", "progress", "__isSmooth", "__isScrolling", "__isStopped", "__isLocked", "className", "name", "toggle"]
}
